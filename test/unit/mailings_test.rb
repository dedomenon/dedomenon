################################################################################
#This file is part of Dedomenon.
#
#Dedomenon is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Dedomenon is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Dedomenon.  If not, see <http://www.gnu.org/licenses/>.
#
#Copyright 2008 RaphaÃ«l Bauduin
################################################################################

require File.dirname(__FILE__) + '/../test_helper'
require 'mailings'

class MailingsTest < ActiveSupport::TestCase
  FIXTURES_PATH = File.dirname(__FILE__) + '/../fixtures'
  CHARSET = "utf-8"

  include ActionMailer::Quoting

  def setup
    ActionMailer::Base.delivery_method = :test
    ActionMailer::Base.perform_deliveries = true
    ActionMailer::Base.deliveries = []

    @expected = TMail::Mail.new
    @expected.set_content_type "text", "plain", { "charset" => CHARSET }
  end

  #FIXME: These tests are failing because the mail created by the TMail
  # is different from the one created by the Mailings model. The mail
  # generated by the Mailings takes the attributes from its instance variables
  # the body from the app/views/mailings/mailing.rhmtl
  def test_mailing
    @expected.subject = 'Mailings#mailing'
    @expected.body    = read_fixture('mailing')
    @expected.date    = Time.now

    #assert_equal @expected.encoded, Mailings.create_mailing(@expected.date).encoded
  end

  private
    def read_fixture(action)
      IO.readlines("#{FIXTURES_PATH}/mailings/#{action}")
    end

    def encode(subject)
      quoted_printable(subject, CHARSET)
    end
end
